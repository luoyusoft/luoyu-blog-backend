<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinhx.blog.mapper.article.ArticleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jinhx.blog.entity.article.Article">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="description" property="description" />
        <result column="content" property="content" />
        <result column="content_format" property="contentFormat" />
        <result column="read_num" property="readNum" />
        <result column="like_num" property="likeNum" />
        <result column="cover_type" property="coverType" />
        <result column="cover" property="cover" />
        <result column="category_id" property="categoryId" />
        <result column="publish" property="publish" />
        <result column="open" property="open" />
        <result column="creater_id" property="createrId" />
        <result column="updater_id" property="updaterId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <resultMap id="WithTagList" type="com.jinhx.blog.entity.article.dto.ArticleDTO" extends="BaseResultMap">
        <association property="tagList" column="{linkId=id, module=module}" select="com.jinhx.blog.mapper.operation.TagMapper.listByLinkId"/>
    </resultMap>

    <!-- 查询所有结果列 -->
    <sql id="AllColumn">
       id,title,description,content,content_format,read_num,like_num,cover,cover_type,category_id,publish,open,creater_id,updater_id,create_time,update_time
    </sql>

    <!-- 后台列表结果列 -->
    <sql id="ListColumn">
        id,title,description,read_num,like_num,cover,cover_type,category_id,publish,open,creater_id,updater_id,create_time,update_time
    </sql>

    <select id="selectPublishCount" resultType="java.lang.Integer">
        select count(*) from article where publish = true
    </select>

    <select id="selectAllCount" resultType="java.lang.Integer">
        select count(*) from article
    </select>

    <select id="listArticleDTO" resultType="com.jinhx.blog.entity.article.dto.ArticleDTO">
        select <include refid="ListColumn"/> from article
        <where>
            <if test="params.title!=null and params.title !=''">
                and title like concat('%',#{params.title},'%')
            </if>
        </where>
        order by update_time desc
    </select>

    <update id="updateReadNum">
        update article set read_num = read_num + 1 where id = #{id} and publish = true
    </update>

    <update id="updateLikeNum">
        update article set like_num = like_num + 1 where id = #{id} and publish = true
    </update>

    <select id="checkByCategory" resultType="java.lang.Integer">
        select count(*) from article where category_id = #{categoryId}
    </select>

    <select id="checkByFile" resultType="java.lang.Integer">
        select count(*) from article where cover = #{url}
    </select>

    <select id="selectArticleDTOList" resultType="com.jinhx.blog.entity.article.dto.ArticleDTO">
        select <include refid="AllColumn"/> from article where publish = true
    </select>

    <select id="selectArticleListByTitle" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, title
        from article
        where publish = true
        <if test="name!=null and name!=''">
            and title like concat('%',#{title},'%')
        </if>
        order by id desc
    </select>

    <update id="updateArticleById" parameterType="com.jinhx.blog.entity.article.Article">
        update article
        <set>
            <if test="title!=null and title!=''">
                title = #{title},
            </if>
            <if test="description!=null">
                description = #{description},
            </if>
            <if test="content!=null">
                content = #{content},
            </if>
            <if test="contentFormat!=null">
                content_format = #{contentFormat},
            </if>
            <if test="readNum!=null">
                read_num = #{readNum},
            </if>
            <if test="likeNum!=null">
                like_num = #{likeNum},
            </if>
            <if test="cover!=null">
                cover = #{cover},
            </if>
            <if test="coverType!=null">
                cover_type = #{coverType},
            </if>
            <if test="updateTime!=null">
                update_time = #{updateTime},
            </if>
            <if test="updaterId!=null">
                updater_id = #{updaterId},
            </if>
            <if test="categoryId!=null">
                category_id = #{categoryId},
            </if>
            <if test="publish!=null">
                publish = #{publish},
            </if>
            <if test="open!=null">
                open = #{open}
            </if>
        </set>
        where id = #{id}
    </update>

    <!-- *************************** portal ****************************** -->

    <select id="getSimpleArticleDTO" resultType="com.jinhx.blog.entity.article.dto.ArticleDTO">
        select <include refid="AllColumn"/> from article where id = #{id} and publish = true
    </select>

    <select id="getHotReadList" resultType="com.jinhx.blog.entity.article.dto.ArticleDTO">
        select <include refid="ListColumn"/> from article where publish = true and open = true order by read_num desc limit 5
    </select>

    <select id="selectArticleById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select <include refid="AllColumn"/>
        from article
        where id = #{id} and publish = true
    </select>

    <select id="queryPageCondition" resultMap="WithTagList">
        select <include refid="ListColumn"/> , 0 as `module` from article
        <where>
            publish = true
            <if test="params.categoryId !=null and params.categoryId != ''">
                and find_in_set(#{params.categoryId},category_id)
            </if>
        </where>
        <if test="params.latest">
            order by create_time desc
        </if>
        <if test="params.like">
            order by like_num desc
        </if>
        <if test="params.read">
            order by read_num desc
        </if>
    </select>

    <select id="queryHomePageCondition" resultMap="WithTagList">
        select <include refid="ListColumn"/>, 0 as `module`
        from article
        where publish = true
          and id not in (select link_id from recommend where module = 0)
        order by create_time desc
    </select>

</mapper>
